1.基本操作语句：
    数据库
    创建数据库： create database name;
    查看数据库： show database / show create database name;
    删除数据库： drop database name;
    切换数据库： use name;

    表：
    创建表：create table name {列名 列类型 约束}
    查看表结构： desc  name;
    修改表：alter table name add 列名 列类型 列约束
    删除表：drop table name;

    crud:
    插入：insert into name {(列名1，列名2....)} values(值1， 值2...);
    查询：Select * from name;
    删除：delet  from name where id = 10;
    更新：update name set 列名=列值... where name = 10;
    去重查询：select distinct 列名1... from name


2.几种删除操作的区别
    drop 删除表的全部数据和表结构，并立刻释放磁盘资源。
    truncate 删除表全部数据，保留表结构，立即释放磁盘资源，即永久删除。
    delete 删除表数据，表结构不变，不会立刻释放资源


3.varchar与char的区别
    varchar是变长的，而char是的长度固定，若固定性能会更好。


4.MVCC多版本并发控制
        MVCC是通过保存数据在某个时间点的快照来实现的，也就是说同一个事务内看到的数据是一致的，而根据事务开始的时间不同，同一时刻，不同
    事物看到的数据可能不一致。不同的存储引擎对于MVCC的实现是不同的，对于InnoDB,它通过在每行记录后面保存两个隐藏的列来实现，这两个列，
    一个用来保存行的创建时间，一个用于保存行的过期时间（或删除时间），这里的时间指的是系统版本号。当每开启一个新的事务，系统的版本号
    会自动递增（MVCC只在 REPEATABLE READ和READ COMMITTED下工作）。


5.innodb和myisam的区别？
    1.innodb支持事务，myisam不支持事务
    2.锁粒度不同，innodb支持行锁和表级锁，默认使用行锁，myisam只有表锁
    3.innodb支持外键，myisam不支持此外键
    4.innodb支持MVCC,并且凭借着行锁的控制，实现了优秀的高并发性能，而myisam只会对整张表进行加锁，对于并发的性能来说，不如innodb


6.关系型和非关系型数据库的区别？
    ER关系图
    关系型数据库是指采用了关系模型来组织数据的数据库，这里的关系模型可理解为二维表格模型，常见的关系型数据库如MySQL,orcale
    非关系型数据库NOSQL是指非关系型的，且一般不保证遵循ACID原则的数据存储系统。如redis,mongodb（文档型）,Infinite Graph(图片型)
    HBase(列类型)。
    1.从存储位置来说，关系型数据库将数据存储在硬盘中，NoSQL将数据存储在缓存中，因此NoSQL的查询速度远高于关系型数据库，但NoSql不
      使用于持久存储，海量的数据持久存储还是需要关系型数据库。
    2.从存储的数据类型来说，关系型数据库只存储基本的几种数据类型，而NoSQL可以存储key-value,文档，图片等多种类型数据的存储。
    3.从扩展性来说，关系型数据库都多表查询或者多表关联的机制，因此扩展比较难，而NoSQL数据之间没有耦合性，因此易于水平扩展。


7.事务的四大特性（ACID）
    原子性、一致性、隔离性、持久性。


8.事务的隔离级别？MySQL默认的隔离级别是什么？
    读未提交、读已提交、可重复读、可串行化；MySQL的默认隔离级别为可重复读


9.悲观锁与乐观锁的区别？
    悲观锁和乐观锁是两种锁的设计思想:
        悲观锁认为每次操作都可能产生并发，因此，每次的数据操作都对数据进行加锁。
        乐观锁认为每次操作都不会产生并发，因此，不对数据进行加锁，只是在提交的时候比对数据是否被修改，如果被修改，则再来一次，多用于读
    多写少的情况，可以有效的提高吞吐量。如Java中的CAS所实现的机制。


10.最左前缀匹配原则及它的原因

11.大表优化的思路？

12.where 和 having 的区别？

13.分库分表

14.explain命令


15.数据库三大范式
    关系数据库中的关系必须满足一定的要求，而满足不同程度的要求为不同的范式。数据库的设计范式其实就是数据库设计所需要遵循的规范。
    范式可以避免数据冗余，减少数据库的空间，减轻维护数据库的麻烦，但操作麻烦，并且要求越高，性能越差。

    第一范式：
        关系模式中的关系属性r都是单一属性的，不可再分的，在数据库中体现在表的字段是单一属性的，不可再分的。如果数据库不满足第一范
    式，则不能称为关系型数据库。
    第二范式：
        满足第一范式要求，并且非主属性完全依赖主属性。在数据库中体现在表中的非主键字段必须由整个主键决定，不能由主键的
    一部分来决定，需要消除部份依赖。可以减少插入异常，删除异常和修改异常。
    第三范式：
        满足第二范式要求，并且非主属性之间不存在依赖。在数据库中体现在非主键字段之间不存在依赖关系。

    15.1.什么是数据库范式？
        数据库范式是用来设计数据库的规范，并且范式越高，性能越差。

    15.2.都有哪些数据库范式？
        第一范式、第二范式、第三范式、BC范式、第四范式和第五范式。

15.如何加快索引查询速度

16.聚集索引和非聚集索引的区别
    聚集索引：是指数据库表中数据的物理存储顺序与索引顺序相同，索引的顺序决定了数据表中的物理顺序的一种索引。
    非聚集索引：索引的逻辑顺序与数据库表中的物理存储数据顺序不同。
    区别：
        聚集索引在一个表中只能有一个，非聚集索引可以存在多个；
        聚集索引存储的数据逻辑上、物理上都连续，表中数据的物理存储顺序与索引顺序相同，而非聚簇索引只是逻辑上的连续，物理存储顺序与索引
        顺序无关；

17.什么时候不该使用索引

18.索引底层的数据结构？

19.B+树做索引比红黑树好在哪里？

